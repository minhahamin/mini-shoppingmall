# Server Configuration
server.port=${PORT:8080}

# PostgreSQL Database Configuration
# DatabaseConfig.java에서 환경 변수를 처리합니다 (Railway DATABASE_URL 지원)
# 로컬 개발: application-local.properties 사용
# 배포: DATABASE_URL 또는 SPRING_DATASOURCE_URL 환경 변수 사용

# Active Profile
spring.profiles.active=${SPRING_PROFILES_ACTIVE:local}

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Disable H2 Console (PostgreSQL 사용)
spring.h2.console.enabled=false
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration

# Stripe Configuration
stripe.api.key=${STRIPE_API_KEY:${STRIPE_SECRET_KEY:sk_test_dummy}}
stripe.public.key=${STRIPE_PUBLIC_KEY:pk_test_dummy}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_dummy}

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.com.shoppingmall=DEBUG

